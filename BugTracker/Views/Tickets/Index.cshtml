@model IEnumerable<BugTracker.Models.Ticket>

@{
    ViewData["Title"] = "Index";
    Layout = "_TicketLayout";
}

<div class="mx-5 my-3">
    <h2>Ticket list</h2>
    <div class="pb-2">
        <!-- Search -->
        <form class="d-none d-inline-block form-inline mr-auto mw-100 navbar-search">
            <div class="input-group">
                <input type="text" class="form-control bg-light border-0 small" placeholder="Search for..."
                       aria-label="Search" aria-describedby="basic-addon2">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="button">
                        <i class="fas fa-search fa-sm"></i>
                    </button>
                </div>
            </div>
        </form>

        <!-- Create -->
        <a asp-action="Create" class="btn btn-primary mr-auto mw-100" type="button">Create New</a>

    </div>
    <div class="card shadow mb-5">
        <div class="table-responsive ">
            <table class="table table-bordered m-0" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                            Title
                        </th>
                        <th>
                            Status
                        </th>
                        <th>
                            Assignee
                        </th>
                        <th>
                            Reporter
                        </th>
                        <th>
                            Date Created
                        </th>
                        <th>
                            Last Update Time
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.TicketId">@Html.DisplayFor(modelItem => item.Title)</a>
                            </td>
                            <td>
                                @{
                                    var statusesDictionary = ViewBag.StatusesDictionary as Dictionary<int, string>;
                                    var statusId = item.StatusId; // Assuming item is your current model item

                                    // Check if the status ID exists in the dictionary
                                    if (statusesDictionary.ContainsKey(statusId))
                                    {
                                        // Display the title of the corresponding status
                                        @statusesDictionary[statusId]
                                    } else
                                    {
                                        // Handle case where corresponding status is not found
                                        @("Status Not Found")
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AssigneeEmail)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ReporterEmail)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DateCreated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastUpdateTime)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>